package my.company.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LibrosAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLibrosAllPropertiesEquals(Libros expected, Libros actual) {
        assertLibrosAutoGeneratedPropertiesEquals(expected, actual);
        assertLibrosAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLibrosAllUpdatablePropertiesEquals(Libros expected, Libros actual) {
        assertLibrosUpdatableFieldsEquals(expected, actual);
        assertLibrosUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLibrosAutoGeneratedPropertiesEquals(Libros expected, Libros actual) {
        assertThat(expected)
            .as("Verify Libros auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLibrosUpdatableFieldsEquals(Libros expected, Libros actual) {
        assertThat(expected)
            .as("Verify Libros relevant properties")
            .satisfies(e -> assertThat(e.getIsbn()).as("check isbn").isEqualTo(actual.getIsbn()))
            .satisfies(e -> assertThat(e.getStock()).as("check stock").isEqualTo(actual.getStock()))
            .satisfies(e -> assertThat(e.getAutor()).as("check autor").isEqualTo(actual.getAutor()))
            .satisfies(e -> assertThat(e.getImagen()).as("check imagen").isEqualTo(actual.getImagen()))
            .satisfies(e -> assertThat(e.getPaginas()).as("check paginas").isEqualTo(actual.getPaginas()))
            .satisfies(e -> assertThat(e.getTitulo()).as("check titulo").isEqualTo(actual.getTitulo()))
            .satisfies(e -> assertThat(e.getNumeroAlquilados()).as("check numeroAlquilados").isEqualTo(actual.getNumeroAlquilados()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLibrosUpdatableRelationshipsEquals(Libros expected, Libros actual) {}
}
